export const fileUploadOneCode = '"use client"\n\nimport { useRef, useState, useCallback } from "react";\n\nimport {\n   Card,\n   CardContent,\n   CardFooter,\n   CardHeader,\n   CardTitle,\n} from "@/components/ui/card";\nimport { Button } from "@/components/ui/button";\nimport { Input } from "@/components/ui/input";\nimport { Upload, File, X } from "lucide-react";\n\nexport const FileUploadZone = () => {\n   const [file, setFile] = useState<File | null>(null);\n   const fileInputRef = useRef<HTMLInputElement>(null);\n\n   const onDrop = useCallback((acceptedFile: File) => {\n      setFile(acceptedFile);\n   }, []);\n\n   const removeFile = () => {\n      setFile(null);\n      if (fileInputRef.current) {\n         fileInputRef.current.value = "";\n      };\n   };\n\n   const renderFilePreview = (file: File) => {\n      if (file.type.startsWith("image/")) {\n         return <img src={URL.createObjectURL(file)} alt={file.name} className="w-full h-full object-cover\nrounded" />\n      };\n      return <File className="w-16 h-16 text-primary" />;\n   };\n\n   return (\n      <div className="h-full flex flex-col items-center justify-between bg-white border-r p-4 rounded-l-xl">\n         <Card className="w-full max-w-lg py-4">\n            <CardHeader>\n               <CardTitle className="text-2xl text-center">File Upload</CardTitle>\n            </CardHeader>\n            <CardContent>\n               <div\n                  className="border-2 border-dashed border-input rounded-lg p-6 flex flex-col items-center\njustify-center cursor-pointer hover:border-primary transition-colors"\n                  onDragOver={(e) => e.preventDefault()}\n                  onDrop={(e) => {\n                     e.preventDefault();\n                     const droppedFile = e.dataTransfer.files[0];\n                     if (droppedFile) {\n                        onDrop(droppedFile)\n                     };\n                  }}\n                  onClick={() => fileInputRef.current?.click()}\n               >\n                  {file ? (\n                     <div className="w-full">\n                        <div className="aspect-square w-32 mx-auto rounded overflow-hidden bg-muted flex\nitems-center justify-center mb-4">\n                           {renderFilePreview(file)}\n                        </div>\n                        <p className="text-sm text-center text-muted-foreground mb-2 truncate">{file.name}</p>\n                        <Button\n                           variant="destructive"\n                           size="sm"\n                           className="w-full"\n                           onClick={(e) => {\n                              e.stopPropagation()\n                              removeFile()\n                           }}\n                        >\n                           <X className="w-4 h-4 mr-2" />\n                           Remove File\n                        </Button>\n                     </div>\n                  ) : (\n                     <>\n                        <Upload className="w-12 h-12 text-muted-foreground mb-4" />\n                        <p className="text-sm text-muted-foreground text-center">\n                           Drag & drop a file here, or click to select a file\n                        </p>\n                     </>\n                  )}\n                  <Input\n                     type="file"\n                     ref={fileInputRef}\n                     className="hidden"\n                     onChange={(e) => {\n                        const selectedFile = e.target.files?.[0];\n                        if (selectedFile) {\n                           onDrop(selectedFile);\n                        };\n                     }}\n                  />\n               </div>\n            </CardContent>\n            <CardFooter>\n               <p className="text-sm text-muted-foreground text-center w-full">\n                  {file\n                     ? `Selected file: ${file.name} (${(file.size / 1024).toFixed(2)} KB)`\n                     : "No file selected"\n                  }\n               </p>\n            </CardFooter>\n         </Card>\n      </div>\n   )\n};'